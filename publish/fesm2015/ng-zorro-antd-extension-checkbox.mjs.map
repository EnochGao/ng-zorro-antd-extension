{"version":3,"file":"ng-zorro-antd-extension-checkbox.mjs","sources":["../../components/checkbox/checkbox.component.ts","../../components/checkbox/checkbox.component.html","../../components/checkbox/checkbox.module.ts","../../components/checkbox/public-api.ts","../../components/checkbox/ng-zorro-antd-extension-checkbox.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport interface Options<T = string> {\n  label: string;\n  value: T;\n  [key: string]: any;\n}\n\n/**\n * nz-checkbox-extension 自定义选择框,选择时传出的值为数组形式如：[1,2]\n *\n * html:\n * ```html\n *  <nz-checkbox-extension [checkOptions]=\"checkOptions\" formControlName=\"label\"></nz-checkbox-extension>\n * ```\n * ts:\n * ```ts\n *  checkOptions = [\n    { label: '客户信赖', value: '客户信赖' },\n    { label: '技术评估', value: '技术评估' },\n  ];\n    this.form = this.fb.group({\n      label: []\n    });\n\n * ```\n */\n\n@Component({\n  selector: 'nz-checkbox-extension',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxExtensionComponent),\n      multi: true\n    },\n  ]\n})\nexport class CheckboxExtensionComponent implements OnInit, ControlValueAccessor {\n\n  @Input() checkOptions: Array<Options<number | string>> = [];\n  /**\n   * 自定义函数用来格式化输输入内容用来回显\n   */\n  @Input() customFormateInFn: (value: any) => Array<any> = (value: any) => value;\n  /**\n  * 自定义函数用来格式化输出内容用来接口入参\n  */\n  @Input() customFormateOutFn = (checkedList: any) => checkedList;\n\n  nzDisabled = false;\n\n  private propagateChange = (_: any) => { };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  writeValue(v: (string | number)[]): void {\n    if (v) {\n      let list = this.customFormateInFn(v) || [];\n      list.forEach((value: string | number) => {\n        const index = this.checkOptions.findIndex(i => i.value === value);\n        if (index > -1) {\n          this.checkOptions[index]['checked'] = true;\n        }\n      });\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n  }\n\n  emit(value: Options<number | string>[]): void {\n    const checkedList = value.filter(i => i['checked']).map(i => i.value);\n    this.propagateChange(this.customFormateOutFn(checkedList));\n  }\n\n}\n","<nz-checkbox-group [nzDisabled]=\"nzDisabled\" [(ngModel)]=\"checkOptions\"\n  (ngModelChange)=\"emit(checkOptions)\">\n</nz-checkbox-group>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { CheckboxExtensionComponent } from './checkbox.component';\n\n@NgModule({\n  declarations: [\n    CheckboxExtensionComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NzCheckboxModule\n  ],\n  exports: [CheckboxExtensionComponent]\n})\nexport class NzCheckboxExtensionModule { }\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nexport * from './checkbox.component';\nexport * from './checkbox.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}